{"titles": ["miniKanren, live and untagged: Quine generation via relational interpreters (programming pearl)", "GPU programming in rust: Implementing high-level abstractions in a systems-level language", "Declarative Parallel Programming for GPUs.", "Dynamic parallelism for simple and efficient GPU graph algorithms", "Region-based memory management for GPU programming languages: enabling rich data structures on a spartan host", "Kanor: A Declarative Language for Explicit Communication", "Meta-programming and auto-tuning in the search for high performance GPU code", "Redirection of multiple remote devices", "Converting data-parallelism to task-parallelism by rewrites: purely functional programs across multiple GPUs", "Depth map estimation for plenoptic images", "Schism: A Self-Hosting Scheme to WebAssembly Compiler", "Region-based memory management for expressive GPU programming", "Visualizing the turing tarpit", "miniKanren, Live and Untagged", "An Embedded DSL for High Performance Declarative Communication with Correctness Guarantees in C++", "Converting Data to Task-Parallelism by Rewrites", "A Declarative Language for Explicit Communication", "The need to know engine: investing sun access manager.", "Kanor", "High-level Coordination Specification"], "ids": ["8ae70bb9-1288-404f-a090-9b3cff67ee7b", "bcf48b96-e964-4006-97a5-a8b2f7b07577", "960e0945-c731-405b-80bc-d3294f5ad618", "6c13018f-a6f9-4600-bdd5-eb004129469d", "14b60a56-e477-4ca4-9fb9-059f5dce9d13", "12f081c1-f9c9-4d13-8bfb-1be90ade2e7d", "25fa0197-4f72-49c5-8f75-17e0a4d2b11e", "7fa06475-9b14-42fd-90a8-c916739deb43", "9104f188-3a23-486c-a556-3ccb4ea3f61b", "c3a677c3-3b04-4150-8f66-707e1cb4a339", "83ed1164-691b-4823-aee8-7f975af65da2", "a6a7b381-dd87-4340-ac45-90c39dd8a431", "53f8a46b-e415-4d05-8bec-7398b38fa397", "85b0731d-6e50-4201-add2-9c7c8c4ebfdd"]}