{"titles": ["The boost graph library: user guide and reference manual", "Gradual typing for objects", "Gradual Typing for Functional Languages", "Concepts: linguistic support for generic programming in C++", "A comparative study of language support for generic programming", "The matrix template library: A generic programming approach to high performance numerical linear algebra", "Concept checking: Binding parametric polymorphism in C++", "Refined criteria for gradual typing", "Design and evaluation of gradual typing for Python", "Blame for all", "Threesomes, with and without blame", "An extended comparative study of language support for generic programming", "The Matrix Template Library: Generic Components for High\u2010performance Scientific Computing", "Gradual typing with unification-based inference", "The generic graph component library", "Automating the generation of composed linear algebra kernels", "An efficient software transactional memory using commit-time invalidation", "Essential language support for generic programming", "Build to order linear algebra kernels", "Concoqtion: indexed types now!", "Exploring the design space of higher-order casts", "A modern framework for portable high-performance numerical linear algebra", "Proposed wording for concepts (revision 3)", "Algorithm specialization in generic programming: challenges of constrained generics in C++", "Pycket: a tracing JIT for a functional language", "Monotonic references for efficient gradual typing", "The gradualizer: a methodology and algorithm for generating gradual type systems", "Blame and coercion: together again for the first time", "Big types in little runtime: open-world soundness and collaborative blame for gradual type systems", "A language for generic programming", "Theorems for free for free: Parametricity, with and without types", "The boost graph library: User guide and reference manual, portable documents", "Concepts for C++ 0x", "The matrix template library: A unifying framework for numerical linear algebra", "A language for generic programming in the large", "A Rational Approach to Portable High Performance: The Basic Linear Algebra Instruction Set BLAIS and the Fixed Algorithm Size Template FAST Library", "Improving the lazy Krivine machine", "Automatically generating the dynamic semantics of gradually typed languages", "A semantic analysis of C++ templates", "Modelyze: a gradually typed host language for embedding equation-based modeling languages", "Sound gradual typing: Only mostly dead", "Interpretations of the gradually-typed lambda calculus", "Implementing concepts", "Meta-tracing makes a fast Racket", "Generic programming for high performance numerical linear algebra", "The matrix template library", "Decltype and auto (revision 4)", "Visualizing transactional memory", "Generic graph algorithms for sparse matrix ordering", "Reliable generation of high-performance matrix algebra", "Region-based memory management for GPU programming languages: enabling rich data structures on a spartan host", "Modular type-safety proofs in Agda", "Incremental type-checking for type-reflective metaprograms", "Language requirements for large-scale generic libraries", "Concepts for C++ 0x (revision 1)", "Gradual typing: a new perspective", "The recursive union of some gradual types", "Compile-time reflection and metaprogramming for Java", "Caramel: A concept representation system for generic programming", "The C++ 0x Concepts Effort", "General purpose languages should be metalanguages.", "An analysis of constrained polymorphism for generic programming", "New iterator concepts", "The iterative template library", "Automatic generation of tiled and parallel linear algebra routines", "Generating empirically optimized composed matrix kernels from MATLAB prototypes", "An efficient lock-aware transactional memory implementation", "Combining Optimizations, Combining Theories", "Toward efficient gradual typing for structural types via coercions", "Gradual typing for mutable objects", "Pattern-based traits", "Advances in Software Tools for Scientific Computing, chapter A Modern Framework for Portable High Performance Numerical Linear Algebra", "Boost Concept Check Library", "Mayfly A Pattern for Lightweight Generic Interfaces", "Measuring enforcement windows with symbolic trace interpretation: What well-behaved programs say", "Well-typed islands parse faster", "Toward simplified parallel support in C++", "Generic Programming with Concepts", "Concoqtion: Mixing dependent types and Hindley-Milner type inference", "Generative Programming and Component Engineering", "Definitions and fundamentals\u2013the message passing interface (MPI)", "Iterative Template Library", "Modern Software Tools for Scientific Computing, chapter A Modern Framework for Portable High Performance Numerical Linear Algebra", "Monotonic references for gradual typing", "Parallel memory prediction for fused linear algebra kernels", "Decltype and auto. C++ standards committee document N1478= 03-0061, April 2003", "Policy adaptors and the Boost iterator adaptor library", "Explicit model definitions are necessary", "Understanding memory effects in the automated generation of optimized matrix algebra kernels", "An intentional library approach to lock-aware transactional memory", "Concepts for the C++ 0x standard library: Iterators", "C++ concept checking", "A modern framework for portable high performance numerical linear algebra. Master's thesis, University of Notre Dame, 1999", "Optimizing and evaluating transient gradual typing", "Gradually typed symbolic expressions", "Proposed wording for scoped concept maps", "Scoped concept maps", "Essential language support for generic programming: Formalization part 1", "Concept-based component libraries and optimizing compilers", "Type safety in three easy lemmas, May 2013", "Efficient gradual typing", "Gradual typing in an open world", "From optional to gradual typing via transient checks", "What is gradual typing", "Reliable generation of high-performance matrix algebra", "Gradual typing for objects: Isabelle formaliztaion", "Modular generics", "An Implementation of Graph Isomorphism Testing", "The laboratory for scientific computing (LSC): Coding standards", "An efficient compiler for the gradually typed lambda calculus", "The Semantics of ParalleX, v1. 0", "The key to blame: Gradual typing meets cryptography.(2016)", "Design and evaluation of gradual typing for Python", "Modular type-safety proofs using dependant types", "Towards gradual typing in Jython", "Effects for funargs", "Proving conflict serializability for full invalidation", "Lock-aware transactional memory", "Iterator concepts for the C++0x standard library (revision 4)", "Space-efficient blame tracking for gradual types", "New iterator concepts (2003)", "Generic Programming for High Performance Numerical Linear Algebra", "The matrix template library", "Programming language foundations in Agda", "A space-efficient call-by-value virtual machine for gradual set-theoretic types", "Declarative semantics for functional languages: compositional, extensional, and elementary", "Well-Typed Languages are Sound", "The key to blame: Gradual typing meets cryptography", "Editing functional programs without breaking them", "C++ move semantics for exception safety and optimization in software transactional memory libraries", "Iterator Concepts for the C++ 0x Standard Library", "LCSD: library-centric software design", "C++. T formalization in Isar", "On combining program improvers", "The Basic Linear Algebra Instruction Set: Building Blocks for Portable High Performance", "Iterator facade and adaptor", "A statistical approach to reducing an optimization search space", "Toward a Mechanized Compendium of Gradual Typing", "Transitivity of Subtyping for Intersection Types", "Efficiency of a good but not linear nominal unification algorithm", "Challenges and progress toward efficient gradual typing (invited talk)", "Declarative Semantics for Functional Languages", "Revisiting Elementary Denotational Semantics", "Fractional Permissions for Race-Free Mutable References in a Dataflow Intermediate Language", "Polymorphic Gradual Typing: A Set-Theoretic Perspective", "Shared memory optimizations for distributed memory programming models", "19th international workshop on foundations of object-oriented languages (FOOL'12)", "Measuring Enforcement Windows with Symbolic Trace Interpretation: What Well-Behaved Programs Say; CU-CS-1093-12", "Automatic Differentiation", "2011 international workshop on foundations of object-oriented languages (fool'11) splash/oopsla'11 workshop summary", "Exploring the optimization space for build to order matrix algebra", "Proposal for Constrained Generics and Module Extensions for Chapel", "PERM'11-Proceedings of the 20th ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation: Foreword", "A Problem Course in Compilation: From Python to x86 Assembly", "Special issue on library-centric software design (LCSD 2006)", "2010 international workshop on foundations of object-oriented languages (FOOL'10) SPLASH/OOPSLA'10 workshop summary", "In Pursuit of Real Answers", "Gradual Programming: Bridging the Semantic Gap", "Generating Empirically Optimized Numerical Software from MATLAB Prototypes", "A Consistency Checking Optimization Algorithm for Memory-Intensive Transactions; CU-CS-1049-08", "An Intentional Library Approach to Lock-Aware Transactional Memory; CU-CS-1048-08", "Proposed Wording for Concepts (Changes from Revision 3 to Revision 4)", "Exploring the Design Space of Higher-Order Casts; CU-CS-1047-08", "Gradual Typing with Unification-Based Inference; CU-CS-1039-08", "Practical Theorem Proving with Isabelle/Isar Lecture Notes", "Mixing Indexed Types and Hindley-Milner Type Inference", "Concoqtion: Mixing Dependent Types and Hindley-Milner Type Inference (Technical Report)", "Gradual Typing: Isabelle/Isar Formalization", "Library-Centric Software Design", "Advances in Software Tools for Scientific Computing", "Gradual Typing for Objects: Isabelle Formalization; CU-CS-1021-06", "Proc. First Internat. Workshop on Library-Centric Software Design (LCSD'05)", "Library-Centric Software Design (LCSD\u201905)", "Essential Language Support for Generic Programming: Formalization Part 1 Technical Report 605", "The Matrix Template Library User Manual", "The Generic Graph Component Library (GGCL) User Manual", "Polymorphic Gradual Typing", "Under consideration for publication in J. Functional Programming 1 An Extended Comparative Study of Language Support for Generic Programming", "An Intentional Library Approach to Lock-Aware Transactional Memory; CU-CS-1048-08", "A Consistency Checking Optimization Algorithm for Memory-Intensive Transactions; CU-CS-1049-08", "Measuring Enforcement Windows with Symbolic Trace Interpretation: What Well-Behaved Programs Say; CU-CS-1093-12", "Hypercoercions and a Framework for Equivalence of Cast Calculi", "Space-Efficient Monotonic References", "Supplement to: The key to blame: Gradual typing meets cryptography", "invokedynamic and Jython", "Automating the Generation of Composed Linear Algebra Kernels", "The Gradualizer: Gradual Typing for Free", "Amal Ahmed, Northeastern University James T. Perconti, Northeastern University", "Toward Type-Directed Editing for Idris", "Blame, coercions, and threesomes, precisely", "The gradual typing approach to mixing static and dynamic typing", "Monads for Relations", "Testing the Static Checkability of Dynamic Languages with Source to Sink Traces", "A Proposal for a Modern Object-Oriented Chapel", "Shifting the Parallel Programming Paradigm", "Gradual Typing with Inference", "A Consistency Checking Optimization Algorithm for Memory-Intensive Transactions"], "ids": ["b0dced3a-8ca0-4c05-826d-8dec708b35b5", "7eefaaf7-6996-4cb0-8293-28411fc7f4a5", "462b0436-cd13-4752-af1a-a6214bce16aa", "7a3500fa-2a00-4019-960b-55d2c656b7e2", "16fa5de0-9d2f-4183-9b9f-37b561620a23", "6dd1cb35-a2f1-4566-a464-f99b5cf3273a", "5a2bb321-43f5-4648-b7c8-d0c1f17a4c8e", "f2e45de3-142e-4883-b8be-b09d4ba82303", "ce96cedd-7b2f-4183-8d2a-d2d7b03dd483", "8257e62f-2f28-4be9-b52b-87ef7002bb76", "f69ffe70-9518-4509-8628-2e1db17a643e", "ee079166-48de-4277-915f-294b8debabff", "1c53df06-408a-4357-83ee-e1b84e958303", "3fa86f09-5ba8-42e0-8156-62d6074902df", "1dd365f1-708d-48f2-96b0-48f7744ccade", "220b31a8-ec12-4420-b5d1-489d3dec8bf9", "a4edded2-6cb1-431a-ada1-4fe3573f2889", "fe443db2-9f7e-4f04-b63b-22720e49a4df", "e2fc7b78-4270-4d27-af5b-796469bd1540", "04c02bf6-85fa-4ce3-8698-743b4070e607", "15bbef5b-7e4a-4f16-8519-4cc80a676d31", "f445d4c2-211e-4851-a875-046805b89d98", "f1ddb783-1b5b-44a1-b56f-473e42336e28", "013fbe7c-acc9-4d54-937e-25f0fb563cd2", "c8cf6a3e-e716-4270-b446-88365c642687", "2c12392f-fbe5-4268-9741-4fb6925be283", "c1c61947-53a6-457f-9a68-aecda1d3ec57", "d4713e11-97c5-49fd-b472-48840630d59b", "8e5d60d3-68c2-42f5-adf1-62398eeca420", "90444f5b-d478-423f-a92c-c48558565ebb", "8462e116-b84a-4ece-a966-9ea68d3cf010", "398d52db-a26e-40d5-a15f-25e9a1f6ee0a", "0a02ccc9-851d-4862-8c3a-a6a6b249d002", "71a1d061-e115-4013-913c-85cb34ef2670", "125816da-e3a7-4a6a-a07d-5d18b81ebeee", "cec387a2-946f-47fa-87c5-5c0ece069ec3", "14b60a56-e477-4ca4-9fb9-059f5dce9d13", "6ccc2baf-a9e9-4bcb-bc91-a1a768608afc", "118a23b6-f26d-423a-adac-b3a1ec89c61f", "95222655-2e9b-4959-a418-c10f954d3e2b", "43a20efe-b665-46ac-b132-3e156a57f87e", "03ef6d51-d66c-4b3b-8f5d-cf11a19b3e50", "5daf5a1a-b613-4c5f-a51c-164dfa1e4348", "ea0c11be-9039-4a05-bd49-7a4315f8ce8f", "7022a923-85ed-48e0-99bd-7eca569a9fda", "ca6de6ca-6171-4d2f-9ca8-dbe9f04bc724", "0fbb64ee-3070-4323-97a0-8527bf4e5224", "538cdac1-bfa7-4929-8ec3-afd0860dbfc7", "8fa81ee7-cb0c-4f47-9381-498a5b2b92de", "a98abcb1-457b-4ffa-b107-a944df951210", "336907a4-d32c-486e-8e3a-8aaa5d7d0476", "0f523830-9bf8-4fcc-aa1c-e08c2da0a939", "05d52807-ef1e-4530-95ca-9108bee93978", "28f492e0-50f8-465c-9b26-7d1dec7c81b1", "681cd6bb-b8e1-40bf-9b8d-0f1744b331a3", "2b4d07ad-ad98-4575-886b-b650e13c2c1b", "d73e614a-d42b-41a9-87b9-0b5792c314a7", "4d89a259-abd7-4997-b0f8-5f9d9628ec7f", "adc7163c-0e7b-46a2-b673-4829daa0052a", "9af4d8bf-1e88-4158-a535-06a4b12ac442", "cec387a2-946f-47fa-87c5-5c0ece069ec3", "26b39886-2168-4479-8628-cc061345cc58", "019b5074-619e-4907-9aaa-534070a76a2f", "16fa5de0-9d2f-4183-9b9f-37b561620a23", "5914c167-d8e3-4ae8-a7ab-b3654d3530d9", "b1691216-63c0-4823-9e65-ee4ffbcd515b", "7ba50ce2-6a79-49bf-9144-db452d1448d5", "6eae46bb-70f2-493e-a28b-ebbd3a1977f4", "8cff8b30-1873-437d-9c2a-0189bab05e4d", "0a02ccc9-851d-4862-8c3a-a6a6b249d002", "54d514cb-b40d-466d-a4d5-b54bb40bf7ae", "7c904fd2-9561-4faf-9faf-91bb2a63f990", "fe1f16f2-76b9-4883-a097-6d3e10698174", "755ce842-6d4e-474b-9f6a-dc56fb96287b", "23476e6a-9130-4c91-87a8-3e27cc69a3d3", "1118050d-64e6-4374-ab45-b2b211d20d1f", "b8ab142a-2504-4a07-89c2-8e003f0aba8b", "6945febd-3520-45c6-9707-5da8b662f897", "89a97a42-8d90-4a6a-8376-570b7de319ba", "aa5a7fca-223d-4591-8baa-4f26db953abc", "bd1b0e65-0b05-4670-811b-20f9c776c970", "e923cd72-e911-4124-87f0-2678b81d7a79", "08bc9c9b-21ce-4021-a963-7fb6b69a3b6c", "f69ffe70-9518-4509-8628-2e1db17a643e", "5da47d9b-a15a-4ceb-8042-d396c29f9a74"]}